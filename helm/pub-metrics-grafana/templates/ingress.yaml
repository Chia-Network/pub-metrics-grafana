{{- $fullName := include "pub-metrics-grafana.fullname" . -}}
{{- $servicePort := .Values.ingress.servicePort -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "pub-metrics-grafana.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - {{ .Values.ingress.hostname | quote }}
      secretName: {{ .Values.ingress.tls.secretName }}
  rules:
    - host: {{ .Values.ingress.hostname | quote }}
      http:
        paths:
          - path: /$
            pathType: Exact
            backend:
              service:
                name: {{ $fullName }}
                port:
                  name: {{ $servicePort }}
          - path: /dashboards
            pathType: Prefix
            backend:
              service:
                name: {{ $fullName }}
                port:
                  name: {{ $servicePort }}
          - path: /d/.*
            pathType: Prefix
            backend:
              service:
                name: {{ $fullName }}
                port:
                  name: {{ $servicePort }}
          - path: /playlists
            pathType: Prefix
            backend:
              service:
                name: {{ $fullName }}
                port:
                  name: {{ $servicePort }}
          # Deny /api and /admin by sending them to a non-existent service or returning 404
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $servicePort }}
          - path: /admin
            pathType: Prefix
            backend:
              service:
                name: dummy-service # Doesn't exist, returns 404
                port:
                  number: 80
